#!/usr/bin/env python3
"""
Teste simples das configura√ß√µes de database sem Django completo
"""

# Primeiro, testar se conseguimos importar as configura√ß√µes
try:
    import sys
    import os
    
    # Adicionar o diret√≥rio do projeto ao path
    sys.path.insert(0, '.')
    
    print("üîß Testando configura√ß√µes b√°sicas...")
    
    # Testar importa√ß√£o do decouple
    try:
        from decouple import config
        print("‚úÖ python-decouple importado com sucesso")
        
        # Testar vari√°veis de ambiente
        db_host = config('DB_HOST', default='localhost')
        db_name = config('DB_NAME', default='mapa_eleitoral')
        print(f"‚úÖ DB_HOST: {db_host}")
        print(f"‚úÖ DB_NAME: {db_name}")
        
    except ImportError as e:
        print(f"‚ùå Erro ao importar decouple: {e}")
    
    # Testar importa√ß√£o do Django settings
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'siteDjango.settings')
        
        from siteDjango.settings import DATABASES, DATABASE_ROUTERS
        print("‚úÖ Django settings importado com sucesso")
        print(f"‚úÖ Databases configurados: {list(DATABASES.keys())}")
        print(f"‚úÖ Database routers: {DATABASE_ROUTERS}")
        
        # Verificar configura√ß√£o espec√≠fica
        if 'blog' in DATABASES:
            print(f"‚úÖ Blog database: {DATABASES['blog']['NAME']}")
        else:
            print("‚ùå Blog database n√£o encontrado")
            
    except Exception as e:
        print(f"‚ùå Erro ao importar Django settings: {e}")
    
    # Testar conex√£o MySQL b√°sica
    try:
        import mysql.connector
        print("‚úÖ mysql-connector-python dispon√≠vel")
        
        # Testar conex√£o b√°sica
        config_dict = {
            'host': config('DB_HOST', default='gondola.proxy.rlwy.net'),
            'port': config('DB_PORT', default=29860, cast=int),
            'user': config('DB_USER', default='root'),
            'password': config('DB_PASSWORD', default='MHOyVWaRdBsIxajzheoDtesardXtYhmP'),
        }
        
        # Testar database blog
        try:
            conn = mysql.connector.connect(database='blog', **config_dict)
            cursor = conn.cursor()
            cursor.execute("SELECT COUNT(*) FROM blog_articles")
            count = cursor.fetchone()[0]
            print(f"‚úÖ Conex√£o com database 'blog': {count} artigos encontrados")
            cursor.close()
            conn.close()
        except Exception as e:
            print(f"‚ùå Erro ao conectar com database 'blog': {e}")
        
        # Testar database eleicoes
        try:
            conn = mysql.connector.connect(database='eleicoes', **config_dict)
            cursor = conn.cursor()
            cursor.execute("SHOW TABLES")
            tables = [row[0] for row in cursor.fetchall()]
            print(f"‚úÖ Conex√£o com database 'eleicoes': {len(tables)} tabelas encontradas")
            cursor.close()
            conn.close()
        except Exception as e:
            print(f"‚ùå Erro ao conectar com database 'eleicoes': {e}")
            
    except ImportError as e:
        print(f"‚ùå mysql-connector-python n√£o dispon√≠vel: {e}")
    
    print("\nüéØ Resumo do teste:")
    print("Se todos os ‚úÖ apareceram acima, a configura√ß√£o est√° correta!")
    print("Caso contr√°rio, verifique as depend√™ncias e configura√ß√µes.")
    
except Exception as e:
    print(f"‚ùå Erro geral no teste: {e}")
    import traceback
    traceback.print_exc()